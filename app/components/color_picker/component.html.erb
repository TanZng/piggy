<!-- component -->
<div class="antialiased sans-serif">
  <script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js" defer></script>
  <style>
      [x-cloak] {
          display: none;
      }
  </style>
  <div x-data="app(<%= "'#{@color}'" %>)" x-cloak>
    <div>

      <div class="mb-5">
        <div class="flex items-center">
          <div>

            <%= @form.label @attribute_name, :class => "font-bold mb-1 text-gray-700 block" %>
            <input id="colorSelected <%= @klass %>_<%= @attribute_name %>" type="text" placeholder="Pick a color"
                   name="<%= @klass %>[<%= @attribute_name %>]"
                   class="h-10 px-4 py-2 leading-normal bg-white text-gray-600 border border-gray-300 rounded-3xl focus:outline-none appearance-none border-transparent focus:border-gray-300 focus:ring-0"
                   :value="`${colorSelected}`"
                   readonly
                   x-model="colorSelected">
          </div>
          <div class="relative ml-2 mt-6">
            <button type="button" @click="isOpen = !isOpen"
                    :class="`${colorSelected} w-10 h-10 rounded-full focus:outline-none inline-flex p-2`"
                    style="color: white"
            >
              <svg class="w-6 h-6 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="none" d="M15.584 10.001L13.998 8.417 5.903 16.512 5.374 18.626 7.488 18.097z"/><path d="M4.03,15.758l-1,4c-0.086,0.341,0.015,0.701,0.263,0.949C3.482,20.896,3.738,21,4,21c0.081,0,0.162-0.01,0.242-0.03l4-1 c0.176-0.044,0.337-0.135,0.465-0.263l8.292-8.292l1.294,1.292l1.414-1.414l-1.294-1.292L21,7.414 c0.378-0.378,0.586-0.88,0.586-1.414S21.378,4.964,21,4.586L19.414,3c-0.756-0.756-2.072-0.756-2.828,0l-2.589,2.589l-1.298-1.296 l-1.414,1.414l1.298,1.296l-8.29,8.29C4.165,15.421,4.074,15.582,4.03,15.758z M5.903,16.512l8.095-8.095l1.586,1.584 l-8.096,8.096l-2.114,0.529L5.903,16.512z"/></svg>
            </button>

            <div x-show="isOpen" @click.away="isOpen = false" x-transition:enter="transition ease-out duration-100 transform"
                 x-transition:enter-start="opacity-0 scale-95" x-transition:enter-end="opacity-100 scale-100"
                 x-transition:leave="transition ease-in duration-75 transform"
                 x-transition:leave-start="opacity-100 scale-100" x-transition:leave-end="opacity-0 scale-95"
                 class="origin-top-right absolute right-0 mt-2 w-40 rounded-md">
              <div class="rounded-3xl border border-gray-300 bg-white px-3 py-3">
                <div class="flex flex-wrap -mx-2">
                  <template x-for="(color, index) in colors" :key="index">
                    <div
                      class="px-2"
                    >
                      <template x-if="colorSelected === color">
                        <div
                          :class="`${color} w-8 h-8 inline-flex rounded-full cursor-pointer border-4 border-white`"
                          :value="`${color}`"
                        >

                        </div>
                      </template>

                      <template x-if="colorSelected != color">
                        <div
                          @click="colorSelected = color"
                          @keydown.enter="colorSelected = color"
                          role="checkbox"
                          tabindex="0"
                          :aria-checked="colorSelected"
                          :value="`${colorSelected}`"
                          :class="`${color} w-8 h-8 inline-flex rounded-full cursor-pointer border-4 border-white focus:outline-none`"
                        >
                        </div>
                      </template>
                    </div>
                  </template>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

    </div>
  </div>

  <script>
      function app(color) {
          let color_selected = color.toString() === '' ? 'bg-gradient-to-r from-blue-500 to-green-400' : color.toString();
          x = {
              isOpen: false,
              colors: [ 'bg-teal-500','bg-gradient-to-r from-teal-500 to-green-300', 'bg-green-300',
                        'bg-blue-500','bg-gradient-to-r from-blue-500 to-green-400', 'bg-green-400',
                        'bg-indigo-500', 'bg-gradient-to-r from-indigo-500 to-purple-400', 'bg-purple-400',
                        'bg-pink-500', 'bg-gradient-to-r from-pink-500 to-red-300', 'bg-red-300',
                        'bg-red-500', 'bg-gradient-to-r from-red-500 to-yellow-400', 'bg-yellow-500',
                        'bg-red-600', 'bg-gradient-to-r from-red-600 to-orange-400', 'bg-orange-400'],
              colorSelected: color_selected
          }
          return x
      }
  </script>
</div>